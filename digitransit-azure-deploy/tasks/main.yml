---
# tasks file for digitransit-azure-deploy

##This section of the role is for restarting already deployed applications
##A restart usually desploys the lastest application from dockerhub

- set_fact:
    dcos_uri: "http://localhost:5436/marathon/v2"
  when: environment_type == "DEV"
  tags:
     - deploy

- set_fact:
    dcos_uri: "http://localhost:5536/marathon/v2"
  when: environment_type == "PROD"
  tags:
     - deploy

- name: restart service in marathon
  uri:
    url: "{{dcos_uri}}/apps/{{appid}}/restart?force=true"
    method: POST
    body: ""
    body_format: json
    HEADER_Content-Type: "application/json"
    status_code: 200,201
    ignore_errors: yes
  tags:
     - restart

## This section of the role is for updating existing running apps or if app not running it deploys it
## marathon will only update where the json file differs from what is running
## this means that we can safely ensure the state of the containers by PUT to all.
## Alternative method would be allow user to pass as list but this fits CI method better.
## curl -X PUT http://localhost/marathon/v2/apps/pelias-api -d @pelias-api.json -H "Content-type: application/json"


- block:
    - name: replace piwik dsn secret
      replace:
        dest="{{ role_path }}/files/{{ item }}"
        regexp='sentrydsnenvsecret'
        replace="{{dev_sentry_dsn}}"
      with_items:
         - "{{filesecrets}}"
      tags:
         - decrypt
         - deploy
  when: environment_type == 'DEV'

- block:
    - name: replace piwik dsn secret
      replace:
        dest="{{ role_path }}/files/{{ item }}"
        regexp='sentrydsnenvsecret'
        replace="{{prod_sentry_dsn}}"
      with_items:
         - "{{filesecrets}}"
      tags:
         - decrypt
         - deploy
  when: environment_type == 'PROD'


- name: replace piwik secret
  replace:
      dest="{{ role_path }}/files/{{ item }}"
      regexp='sentrydsnsecret'
      replace="{{sentry_secret_dsn}}"
  with_items:
     - "{{filesecrets}}"
  tags:
     - decrypt
     - deploy

- name: replace sentry_routing_secret_dsn
  replace:
      dest="{{ role_path }}/files/{{ item }}"
      regexp='sentry_routing_secret_dsn'
      replace="{{sentry_routing_secret_dsn}}"
  with_items:
    - "{{filesecrets}}"
  tags:
    - decrypt
    - deploy

- name: replace fontstack secret
  replace:
     dest="{{ role_path }}/files/hsl-map-server-{{environment_type | lower}}.json"
     regexp='fontstacksecret'
     replace="{{fontstack_password}}"
  tags:
     - decrypt
     - deploy

- block
    - name: replace dockerauth secret
      replace:
         dest="{{ role_path }}/files/{{item}}"
         regexp='dockerauth'
         replace="{{docker_auth}}"
      with_items:
         - "{{dockersecrets}}"
      tags:
         - decrypt
         - deploy
 
    - name: replace dockeruser secret
      replace:
         dest="{{ role_path }}/files/{{item}}"
         regexp='dockeruser'
         replace="{{docker_user}}"
      with_items:
         - "{{dockersecrets}}"
      tags:
         - decrypt
         - deploy
 
    -name: replace slackwebhook secret
      replace:
         dest="{{ role_path }}/files/{{ item }}"
         regexp='slackwebhook'
         replace="{{slack_webhook}}"
      with_items:
         - "{{dockersecrets}}"
      tags:
         - decrypt
         - deploy
  when: environment_type == 'DEV'

###UPDATE OR CREATE THE CONTAINERS

- name: update or create containers to DC/OS
  uri:
    url: "{{dcos_uri}}/apps/{{ item.name }}?force=true"
    method: PUT
    body: "{{ lookup('file','{{ item.config }}.json') }}"
    body_format: json
    HEADER_Content-Type: "application/json"
    status_code: 200,201
  with_items:
     - "{{ container }}"
  tags:
     - update
     - deploy

###UPDATE OR CREATE THE DEV SPECIFIC CONTAINERS

- block:
    - name: update or create dev specific containers to DC/OS
      uri:
        url: "{{dcos_uri}}/apps/{{ item.name }}?force=true"
        method: PUT
        body: "{{ lookup('file','{{ item.config }}.json') }}"
        body_format: json
        HEADER_Content-Type: "application/json"
        status_code: 200,201
      with_items:
         - "{{ dev_container }}"
      tags:
         - update
         - deploy
  when: environment_type == 'DEV'


###RE-ENCRYPT the variabls to prevent any accidents when committing changes

- block:
    - name: re-encrypt piwik dsn secret
      replace:
        dest="{{ role_path }}/files/{{ item }}"
        regexp="{{dev_sentry_dsn}}"
        replace='sentrydsnenvsecret'
      with_items:
         - "{{filesecrets}}"
      tags:
         - encrypt
         - deploy
  when: environment_type == 'DEV'

- block:
    - name: re-encrypt piwik dsn secret
      replace:
        dest="{{ role_path }}/files/{{ item }}"
        regexp="{{prod_sentry_dsn}}"
        replace='sentrydsnenvsecret'
      with_items:
         - "{{filesecrets}}"
      tags:
         - encrypt
         - deploy
  when: environment_type == 'PROD'


- name: re-encrypt piwik secret
  replace:
      dest="{{ role_path }}/files/{{ item }}"
      regexp="{{sentry_secret_dsn}}"
      replace='sentrydsnsecret'
  with_items:
     - "{{filesecrets}}"
  tags:
     - encrypt
     - deploy

- name: re-encrypt sentry_routing_secret_dsn
  replace:
      dest="{{ role_path }}/files/{{ item }}"
      regexp="{{sentry_routing_secret_dsn}}"
      replace='sentry_routing_secret_dsn'
  with_items:
      - "{{filesecrets}}"
  tags:
      - encrypt
      - deploy

- block:
    - name: re-encrypt sentry_routing_secret_dsn for otp-data-builder
      replace:
        dest="{{ role_path }}/files/otp-data-builder-dev.json"
        regexp="{{sentry_routing_secret_dsn}}"
        replace='sentry_routing_secret_dsn'
      tags:
         - encrypt
         - deploy
  when: environment_type == 'DEV'

- name: re-encrypt fontstack secret
  replace:
     dest="{{ role_path }}/files/hsl-map-server-{{environment_type | lower}}.json"
     regexp="{{fontstack_password}}"
     replace='fontstacksecret'
  tags:
     - encrypt
     - deploy

- block
    - name: re-encrypt dockerauth secret
      replace:
         dest="{{ role_path }}/files/{{item}}"
         regexp="{{docker_auth}}"
         replace='dockerauth'
      with_items:
         - "{{dockersecrets}}"
      tags:
         - encrypt
         - deploy

    - name: re-encrypt dockeruser secret
      replace:
         dest="{{ role_path }}/files/{{item}}"
         regexp="{{docker_user}}"
         replace='dockeruser'
      with_items:
         - "{{dockersecrets}}"
      tags:
         - encrypt
         - deploy
 
    -name: re-encrypt slackwebhook secret
      replace:
         dest="{{ role_path }}/files/{{ item }}"
         regexp="{{slack_webhook}}"
         replace='slackwebhook'
      with_items:
         - "{{dockersecrets}}"
      tags:
         - encrypt
         - deploy
  when: environment_type == 'DEV'
