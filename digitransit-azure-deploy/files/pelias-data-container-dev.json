{
  "acceptedResourceRoles": null,
  "backoffFactor": 1.15,
  "backoffSeconds": 1,
  "cmd": null,
  "constraints": [
        [
            "hostname",
            "UNIQUE"
        ]
    ],
  "container": {
      "docker": {
          "forcePullImage": true,
          "image": "hsldevcom/pelias-data-container",
          "network": "BRIDGE",
          "parameters": [
              {
                  "key": "name",
                  "value": "pelias-data-container"
              }
          ],
          "portMappings": [
              {
                  "containerPort": 9200,
                  "hostPort": 0,
                  "labels": {
                      "VIP_0": "/pelias-data-container:9200"
                  },
                  "protocol": "tcp",
                  "servicePort": 10003
              },
              {
                  "containerPort": 9300,
                  "hostPort": 0,
                  "labels": {
                      "VIP_1": "/pelias-data-container:9300"
                  },
                  "protocol": "tcp",
                  "servicePort": 10011
              }
          ],
          "privileged": false
      },
      "type": "DOCKER",
      "volumes": []
  },
  "cpus": 0.5,
  "dependencies": [],
  "disk": 0,
  "env": {
      "ES_HEAP_SIZE": "6g"
  },
  "gpus": 0,
  "healthChecks": [
      {
          "gracePeriodSeconds": 600,
          "ignoreHttp1xx": false,
          "intervalSeconds": 10,
          "maxConsecutiveFailures": 3,
          "path": "/_search?q=name.fi:helsinki",
          "portIndex": 0,
          "protocol": "HTTP",
          "timeoutSeconds": 10
      }
  ],
  "id": "/pelias-data-container",
  "instances": 1,
  "labels": {
      "update": "auto"
  },
  "maxLaunchDelaySeconds": 3600,
  "mem": 2816,
  "portDefinitions": [
      {
          "labels": {},
          "port": 10003,
          "protocol": "tcp"
      },
      {
          "labels": {},
          "port": 10011,
          "protocol": "tcp"
      }
  ],
  "ports": [
      10003,
      10011
  ],
  "readinessChecks": [],
  "taskKillGracePeriodSeconds": null,
  "upgradeStrategy": {
      "maximumOverCapacity": 1,
      "minimumHealthCapacity": 0
  }
}
