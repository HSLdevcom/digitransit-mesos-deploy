---
# tasks file for digitransit-azure-appgw
#
#
- name: switch to ARM mode 
  shell: azure config mode arm

- name: create AZURE resource group
  shell: "azure group create \
         --name {{resource_group_name}} \
         --location {{azure_region}}"

- name: create APPGW VNET
  shell: "azure network vnet create \
         --name {{project}}-{{environment_type}}-APPGW-VNET \
         --address-prefixes {{vnet_prefix}} \
         --resource-group {{resource_group_name}} \
         --location {{azure_region}}"                                     

- name: create APPGW SUBNET
  shell: "azure network vnet subnet create \
         --resource-group {{resource_group_name}} \
         --name {{project}}-{{environment_type}}-APPGW-SUBNET \
         --vnet-name {{project}}-{{environment_type}}-APPGW-VNET \ 
         --address-prefix {{subnet_prefix}}"

- name: create PUBLIC IP for APPGW
  shell: "azure network public-ip create \
          --resource-group {{project }}-{{environment_type}}-APPGW-RG \
          --name {{project}}-{{environment_type}}-APPGW-PUBIP \
          --location {{azure_region}}"


- name: create initial APPGW CONFIG for digitransit SSL offload
  shell: "azure network application-gateway create \
         --name {{project}}-{{environment_type}}-APPGW \
         --location {{azure_region}} \
         --resource-group {{resource_group_name}} \
         --vnet-name {{project}}-{{environment_type}}-APPGW-VNET \                         
         --subnet-name {{project}}-{{environment_type}}-APPGW-SUBNET \
         --public-ip-name {{project}}-{{environment_type}}-APPGW-PUBIP
         --servers {{backend_servers}} \
         --cert-file {{certfile}} \
         --cert-password {{certpass}} \
         --capacity {{capacity}} \
         --sku-name {{sku}} \
         --routing-rule-type {{routing_rule}} \
         --frontend-port {{fe_port}} \
         --http-settings-cookie-based-affinity {{cookie_affinity}} \
         --http-settings-port {{http_settings_port}} \
         --http-settings-protocol {{http_settings_protocol}} \
         --http-listener-protocol {{http_listner_protocol}} \
         --sku-tier {{sku_tier}}"



- name: create HTTP port for listning on PORT 80 as well 
  shell: "azure network application-gateway frontend-port create \
         --resource-group {{resource_group_name}} \
         --gateway-name {{project}}-{{environment_type}}-APPGW \
         --name frontendPort02 \
         --port 80 \
         --nowait"

- name: create listner to listen PORT 80
  shell: "azure network application-gateway http-listener create \
          --resource-group {{resource_group_name}} \
          --gateway-name {{project}}-{{environment_type}}-APPGW \
          --name listener02 \
          --frontend-ip-name frontendIp01 \
          --frontend-port-name frontendPort02 \
          --protocol http \
          --nowait"

- name: create rule for PORT 80 
  shell: "azure network application-gateway rule create \
          --resource-group {{resource_group_name}} \
          --gateway-name {{project}}-{{environment_type}}-APPGW \
          --name rule02 \
          --http-settings-name httpSettings01 \
          --http-listener-name listener02 \
          --address-pool-name pool01 \
          --nowait"


- name: create healthcheck for backend to make sure its alive
  shell: "azure network application-gateway probe create \
          --resource-group {{resource_group_name}} \
          --gateway-name {{project}}-{{environment_type}}-APPGW \
          --host-name {{backend_servers}}\
          --name {{project}}-{{environment_type}}-APPGW-PROBE \
          --timeout 30 \
          --unhealthy-threshold 5 \
          --path / \
          --nowait"

